# Prerequisites Installation

# 1. Install Kind
brew install kind

# 2. Install Helm
brew install helm

# 3. Install kubectl
brew install kubectl

# 4. Install Argo
brew install argocd
brew install argo

# Create Kind Cluster
kind create cluster --name argo-demo

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo add argo https://argoproj.github.io/argo-helm
helm repo update

# Install Prometheus
helm install prometheus prometheus-community/kube-prometheus-stack -n monitoring --create-namespace

# Install ArgoCD using Helm
helm install argocd argo/argo-cd --namespace argocd --create-namespace

# Install Argo Workflows
helm install argo-workflows argo/argo-workflows --namespace argo --create-namespace

# Install Argo Rollouts
helm install argo-rollouts argo/argo-rollouts --namespace argo-rollouts --set dashboard.enabled=true --set dashboard.service.type=ClusterIP --create-namespace
kubectl patch deployment argo-workflows-server -n argo --type='json' -p='[{"op": "add", "path": "/spec/template/spec/containers/0/args/-", "value": "--auth-mode=server"}]'

# Port forward
kubectl port-forward service/argocd-server -n argocd 8080:443
kubectl port-forward svc/argo-workflows-server -n argo 2746:2746
kubectl port-forward svc/argo-rollouts-dashboard -n argo-rollouts 3100:3100


# Login for argocd
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d


#Create k8s secret for argo workflow to access the github repo in update manifest
ssh-keygen -t ed25519 -C "argo@workflow.local" -f deploy_key
Go to the repo --> settings --> deploy keys. Add the public deploy key that we created
kubectl create secret generic git-ssh-key --from-file=ssh-privatekey=deploy_key -n argo



# create a secret for the argo workflow to run a job
ARGO_PWD=$(kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}")
kubectl create secret generic argocd-auth-creds \
  --namespace=argo \
  --from-literal=username=admin \
  --from-literal=password=$(echo $ARGO_PWD | base64 -d)


# Run below command
kubectl patch configmap argocd-cm -n argocd --type merge -p '
{
  "data": {
    "accounts.workflow-automation": "apiKey"
  }
}'


# Apply ApplicationSet
kubectl apply -f infra/applications/applicationset.yaml
Go to Argo cd and "Sync" the application manually. This deploys the application
This also creates an argo rollout event in argo rollout.


#Apply argo workflow
kubectl apply -f infra/workflow/promotion.yaml
Open argo workflow http://localhost:2746/ and submit a new workflow. 
New workflow --> select "promotion workflow" --> insert a image tag https://github.com/*****/enterprise-demo/pkgs/container/enterprise-demo
